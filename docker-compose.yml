version: "3.8"

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: refurbished-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    env_file:
      - ./backend/.env
    networks:
      - app-network
    depends_on:
      - mysql
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:4000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: refurbished-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - backend

  # MySQL Database (Optional - use only if not using Hostinger MySQL)
  mysql:
    image: mysql:8.0
    container_name: refurbished-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
