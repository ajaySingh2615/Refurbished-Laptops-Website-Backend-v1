import {
  serial,
  varchar,
  text,
  int,
  decimal,
  boolean,
  timestamp,
  mysqlTable,
} from "drizzle-orm/mysql-core";

export const products = mysqlTable("products", {
  id: serial("id").primaryKey(),
  title: varchar("title", { length: 255 }).notNull(),
  brand: varchar("brand", { length: 128 }).notNull(),
  model: varchar("model", { length: 128 }),
  sku: varchar("sku", { length: 64 }),
  cpu: varchar("cpu", { length: 128 }),
  gpu: varchar("gpu", { length: 128 }),
  ramGb: int("ram_gb"),
  storage: varchar("storage", { length: 128 }),
  displaySizeInches: decimal("display_size_inches", { precision: 4, scale: 1 }),
  displayResolution: varchar("display_resolution", { length: 64 }),
  displayPanel: varchar("display_panel", { length: 64 }),
  displayRefreshHz: int("display_refresh_hz"),
  brightnessNits: int("brightness_nits"),
  condition: varchar("condition", { length: 64 }).notNull(),
  cosmeticNotes: text("cosmetic_notes"),
  functionalNotes: text("functional_notes"),
  batteryHealthPct: int("battery_health_pct"),
  batteryCycles: int("battery_cycles"),
  ports: text("ports"),
  os: varchar("os", { length: 64 }),
  keyboardLayout: varchar("keyboard_layout", { length: 32 }),
  color: varchar("color", { length: 32 }),
  weightKg: decimal("weight_kg", { precision: 5, scale: 2 }),
  dimensionsMm: varchar("dimensions_mm", { length: 64 }),
  price: decimal("price", { precision: 10, scale: 2 }).notNull(),
  mrp: decimal("mrp", { precision: 10, scale: 2 }),
  gstPercent: int("gst_percent"),
  discountPercent: int("discount_percent"),
  inStock: boolean("in_stock").notNull().default(true),
  stockQty: int("stock_qty").default(0),
  warrantyMonths: int("warranty_months"),
  returnWindowDays: int("return_window_days"),
  fulfillmentLocation: varchar("fulfillment_location", { length: 128 }),
  description: text("description"),
  highlights: text("highlights"),
  metaTitle: varchar("meta_title", { length: 255 }),
  metaDescription: varchar("meta_description", { length: 255 }),
  metaKeywords: varchar("meta_keywords", { length: 255 }),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow().onUpdateNow(),
});
